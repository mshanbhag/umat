<DefineCPLModule xmlns="http://www.sybase.com/cpl/2004/04/" Name="ComputeRsi" CplVersion="2">
 <Interface>
  <Inputs>
   <Input Name="InTrades" StreamSchema="../schemas/trades.ccs"/>
   <Input Name="InCompressedTrades" StreamSchema="../schemas/compressed-trades.ccs"/>
   <Input Name="InPrevUpsDownsAvgsInit" StreamSchema="../schemas/rsi-upsdownsavgs.ccs"/>
  </Inputs>
  <Outputs>
   <Output Name="OutRsi" StreamSchema="../schemas/rsi.ccs"/>
  </Outputs>
  <Params>
   <Param Name="IntervalSize" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="IntegerColumnType" DefaultValue="15" />
   <Param Name="IntervalsNumber" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="IntegerColumnType" DefaultValue="10" />
  </Params>
 </Interface>
 <Body>
  <Streams>
   <Stream Name="StreamUpsDownsAvgs" StreamSchema="../schemas/rsi-upsdownsavgs.ccs"/>
   <Stream Name="StreamUpsDowns" StreamSchema="../schemas/rsi-upsdowns.ccs"/>
   <Stream Name="StreamPrevUpsDownsAvgs" StreamSchema="../schemas/rsi-upsdownsavgs.ccs"/>
  </Streams>
  <Queries>
   <Query Name="Query">
    <QueryText>--
-- Sybase CEP Example - RSI
--
-- 
-- RSI module calculates Relative Strength Index (RSI) for each symbol:
--    RSI = 100 - 100 / (1 + RS)
--    RS = AU / AD
--    AU = Average Up over RSI Period
--    Up = Price - Close for prev period (when Price &gt; Close for prev period)
--    AD = Average Down over RSI Period
--    Down = Price - Close for prev period (when Price &lt; Close for prev period)
--    x = Momentum Period
--

-- 
-- Calculating ups/downs from current price to the price at the end of 
-- previous interval
-- 
INSERT INTO StreamUpsDowns
SELECT
    InTrades.Symbol as Symbol,
    IF InTrades.Price &gt; InCompressedTrades.Close 
        THEN InTrades.Price - InCompressedTrades.Close
        ELSE 0.0
    END IF as UpPrice,
    IF InTrades.Price &lt; InCompressedTrades.Close
        THEN InCompressedTrades.Close - InTrades.Price
        ELSE 0.0
    END IF as DownPrice
FROM
    InTrades,
    InCompressedTrades KEEP LAST PER InCompressedTrades.Symbol
WHERE
	InTrades.Symbol = InCompressedTrades.Symbol;

-- 
-- Calculating William's averages for ups/downs
-- 
INSERT INTO 
    StreamUpsDownsAvgs
SELECT
    StreamUpsDowns.Symbol as Symbol,
    (TO_FLOAT($IntervalsNumber - 1) * StreamPrevUpsDownsAvgs.UpAvg + 
        StreamUpsDowns.UpPrice) / TO_FLOAT($IntervalsNumber) as UpAvg,
    (TO_FLOAT($IntervalsNumber - 1) * StreamPrevUpsDownsAvgs.DownAvg + 
        StreamUpsDowns.DownPrice) / TO_FLOAT($IntervalsNumber) as DownAvg
FROM
    StreamUpsDowns,
    StreamPrevUpsDownsAvgs KEEP LAST PER StreamPrevUpsDownsAvgs.Symbol
WHERE
    StreamUpsDowns.Symbol = StreamPrevUpsDownsAvgs.Symbol;

-- 
-- The ups/downs averages for previous interval
--
INSERT INTO 
    StreamPrevUpsDownsAvgs
SELECT 
    *
FROM 
    InPrevUpsDownsAvgsInit
;

INSERT INTO 
    StreamPrevUpsDownsAvgs
SELECT
    *
FROM
    StreamUpsDownsAvgs
GROUP BY
    StreamUpsDownsAvgs.Symbol
OUTPUT EVERY 
    $IntervalSize seconds;

--
-- Finaly calculate RSI
--
INSERT INTO 
    OutRsi
SELECT
    StreamUpsDownsAvgs.Symbol as Symbol,
    100.0 * StreamUpsDownsAvgs.UpAvg / 
        (StreamUpsDownsAvgs.UpAvg + StreamUpsDownsAvgs.DownAvg) as Rsi
FROM
    StreamUpsDownsAvgs;
</QueryText>
   </Query>
  </Queries>
 </Body>
</DefineCPLModule>
